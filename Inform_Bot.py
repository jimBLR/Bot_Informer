import telebot
from telebot import types
from templates.config import BOT_TOKEN
from templates.weather import get_weather
from templates.translate import *
from templates.parser import *
from templates.news import get_article
from templates.world_time import time_world
import requests

bot = telebot.TeleBot(BOT_TOKEN, threaded=False)
translator = Translator()


@bot.message_handler(commands=['start'])
def command_start(message):
    start_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    btn1 = types.KeyboardButton('Help ‚öπ')
    btn2 = types.KeyboardButton('Translate ‚áÑ')
    btn3 = types.KeyboardButton('Parser ‚¨á')
    btn4 = types.KeyboardButton('Weather üîÜ')
    btn5 = types.KeyboardButton('World Time ‚è≥')
    btn6 = types.KeyboardButton('News üóû')
    btn7 = types.KeyboardButton('Hide Keyboard ‚úñ')
    start_markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    bot.send_message(message.chat.id, f' –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã {message.from_user.first_name}!\n'
                                      f'–Ø - {bot.get_me().first_name} –±–æ—Ç!')
    bot.send_message(message.from_user.id, "–ß—Ç–æ–±—ã —Å–ø—Ä—è—Ç–∞—Ç—å –º–µ–Ω—é,–Ω–∞–∂–º—Ç–µ 'Hide Keyboard'", reply_markup=start_markup)


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'Hide Keyboard ‚úñ':
            hide = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '...', reply_markup=hide)

        elif message.text == 'Help ‚öπ':
            bot.send_message(message.chat.id, "Weather - –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–≥–æ–¥–∞\n"
                                              "World time - –º–∏—Ä–æ–≤–æ–µ –≤—Ä–µ–º—è\n"
                                              "News - –º–∏—Ä–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å\n"
                                              "Parser  - –ø–∞—Ä—Å–∏–Ω–≥ –±/—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π\n"
                                              "Translate - Google –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫")
        elif message.text == 'Parser ‚¨á':
            try:
                sent = bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –Ø –ø–æ–º–æ–≥—É –í–∞–º —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å —Å–∞–π—Ç–∞ \n'
                                                         'https://cars.av.by\n'
                                                         '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –±/—É –º–∞—à–∏–Ω –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É '
                                                         f'—Ñ–æ—Ä–º–∞—Ç–∞:\n '
                                                         f'https://cars.av.by/cars/model\n'
                                                         f'–ù–∞–ø—Ä–∏–º–µ—Ä : https://cars.av.by/bmw/x6')

                bot.register_next_step_handler(sent, parse, )

            except requests.exceptions.MissingSchema:
                bot.send_message(message.chat.id, "–ù–µ –≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")

        elif message.text == 'Weather üîÜ':
            sent = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞!\n"
                                                     "–ü—Ä–∏–º–µ—Ä :  Minsk –∏–ª–∏ –ú–∏–Ω—Å–∫")
            bot.register_next_step_handler(sent, send_weather)

        elif message.text == 'World Time ‚è≥':
            sent = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω—ã !\n"
                                                     "–ü—Ä–∏–º–µ—Ä :  Moscow( –ú–æ—Å–∫–≤–∞)  or  China(–ö–∏—Ç–∞–π)")
            bot.register_next_step_handler(sent, send_time)
        elif message.text == 'News üóû':
            bot.send_message(message.chat.id, "–°–≤–µ–∂–∞ —è –Ω–æ–≤–æ—Å—Ç—å –∏–∑ BBC:\n")
            bot.send_message(message.chat.id, get_article(), parse_mode='HTML')

        elif message.text == 'Translate ‚áÑ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn8 = types.KeyboardButton('English')
            btn9 = types.KeyboardButton('German')
            btn10 = types.KeyboardButton('Polish')
            btn11 = types.KeyboardButton('Spanish')
            btn12 = types.KeyboardButton('French')
            back = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(btn8, btn9, btn10, btn11, btn12, back)

            sent = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏!'
                                                     '–ü–æ—Å–ª–µ –Ω–∞–∂–º–∏—Ç–µ "H–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞',
                                    reply_markup=markup)
            bot.register_next_step_handler(sent, get_input)
        elif message.text == '–ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('Help ‚öπ')
            btn2 = types.KeyboardButton('Translate ‚áÑ')
            btn3 = types.KeyboardButton('Parser ‚¨á')
            btn4 = types.KeyboardButton('Weather üîÜ')
            btn5 = types.KeyboardButton('World Time ‚è≥')
            btn6 = types.KeyboardButton('News üóû')
            btn7 = types.KeyboardButton('Hide Keyboard ‚úñ')
            markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)

            bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è', reply_markup=markup)


def parse(message):
    html = get_html(URL)
    if html.status_code == 200:
        car_list = []
        if islink(message.text):
            for page in range(1, ):
                html = get_html(message.text, params={'page': page})
                car_list.extend(get_content(html.text))
                save_file(car_list, '../cars.xlsx')
                file = open('../cars.xlsx')
                bot.send_message(message.chat.id, f'–í–æ—Ç –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π!')
                bot.send_document(message.chat.id, file)
        else:
            bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏,–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!')


def send_weather(message):
    get_weather(message.text)
    weather = get_weather(message.text)
    bot.send_message(message.chat.id, weather)


def send_time(message):
    time_world(message.text)
    get_time = time_world(message.text)
    bot.send_message(message.chat.id, get_time)


def get_input(message):
    if not any(message.text in item for item in languages):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn8 = types.KeyboardButton('English')
        btn9 = types.KeyboardButton('German')
        btn10 = types.KeyboardButton('Polish')
        btn11 = types.KeyboardButton('Spanish')
        btn12 = types.KeyboardButton('French')
        markup.add(btn8, btn9, btn10, btn11, btn12)
        bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ "—è–∑—ã–∫" –¥–ª—è –ø–µ—Ä–µ–≤–¥–∞ ...', reply_markup=markup)

    else:
        sent = bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ " + message.text + "\n"
                                                                                "‚û°Ô∏è –í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º")
        languages_switcher = {
            'English': send_eng_trans,
            'German': send_ger_trans,
            'Polish': send_pol_trans,
            'Spanish': send_spa_trans,
            'French': send_fra_trans
        }

        lang_response = languages_switcher.get(message.text)
        bot.register_next_step_handler(sent, lang_response)


def send_eng_trans(message):
    start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                     one_time_keyboard=True)  # Return to start keyboard
    bot.send_message(message.chat.id, to_en(message.text), reply_markup=start_markup)


def send_ger_trans(message):
    start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                     one_time_keyboard=False)  # Return to start keyboard

    bot.send_message(message.chat.id, to_de(message.text), reply_markup=start_markup)


def send_pol_trans(message):
    start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                     one_time_keyboard=False)  # Return to start keyboard

    bot.send_message(message.chat.id, to_pl(message.text), reply_markup=start_markup)


def send_spa_trans(message):
    start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                     one_time_keyboard=False)  # Return to start keyboard

    bot.send_message(message.chat.id, to_es(message.text), reply_markup=start_markup)


def send_fra_trans(message):
    start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                     one_time_keyboard=False)  # Return to start keyboard

    bot.send_message(message.chat.id, to_fr(message.text), reply_markup=start_markup)


bot.polling(none_stop=True)
